// recip router 
import multer from 'multer'
import path from 'path';

const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, 'uploads/'); // Ensure this directory exists
    },
    filename: function(req, file, cb) {
        cb(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname));
    }
});

const upload = multer({ storage: storage })

router.post('/:id', isLoggedIn, upload.single('image'), createOneRecipe) //this works

//recipe controller

//creat put and putting error handling
const createOneRecipe = async (req, res)=>{
    try {
        const userId = req.params.id
        // const recipePayload = req.body
        //the whole set of items i want my recipe to contain will be in the curly brackets like the above does with user: userId but since this is holding more information it will also have the payload in the currly brackets the tripple dots makes sure to spread this information through your whole Recipe model
        // const newRecipe = await Recipe.create({...recipePayload,user: userId})
        // res.status(200).json({newRecipe})
        let recipePayload = {
            ...req.body, // This contains all the text fields
            user: userId
        }
        //if there is a file uploaded
        if(req.file){
            recipePayload.imagePath = req.file.path
        }
        const newRecipe = await Recipe.create(recipePayload);
        res.status(200).json({ newRecipe })
    } catch (error) {
        console.error('Error creating new recipe post: this message comes from your recipe controller', error)
        res.status(404).json({
            message: 'Error creating new recipe post'
        })
    }
}

//server
//this is for the uploading of images
import multer from 'multer';
import path from 'path';

const storage = multer.diskStorage({
    destination: function(req, file, cb) {
        cb(null, 'uploads/'); // Ensure this directory exists
    },
    filename: function(req, file, cb) {
        cb(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname));
    }
});

const upload = multer({ storage: storage })

// dependancies
        "multer": "^1.4.5-lts.1",
        "path": "^0.12.7"